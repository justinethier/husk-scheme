Name:                husk-scheme
Version:             3.4.2
Synopsis:            R5RS Scheme interpreter program and library.
Description:         A dialect of R5RS Scheme written in Haskell. Provides advanced 
                     features including continuations, hygienic macros, a Haskell FFI,
                     and the full numeric tower.
License:             MIT
License-file:        LICENSE
Author:              Justin Ethier
Maintainer:          Justin Ethier <github.com/justinethier>
Homepage:            https://github.com/justinethier/husk-scheme
Cabal-Version:       >= 1.4
Build-Type:          Simple
Category:            Compilers/Interpreters, Language
Tested-with:         GHC == 7.0.2, GHC == 6.12.3, GHC == 6.10.4

Extra-Source-Files:  README.markdown
                     LICENSE
Data-Files:          stdlib.scm

Library
  Build-Depends:   base >= 2.0 && < 5, array, containers, haskeline, transformers, mtl, parsec, directory, ghc, ghc-paths
  Extensions:      ExistentialQuantification CPP CPP
  Hs-Source-Dirs:  hs-src
  Exposed-Modules: Language.Scheme.Core
                   Language.Scheme.Types
                   Language.Scheme.Variables
                   Language.Scheme.Plugins.CPUTime
  Other-Modules:   Language.Scheme.FFI
                   Language.Scheme.Macro
                   Language.Scheme.Macro.Matches
                   Language.Scheme.Numerical
                   Language.Scheme.Parser
                   Language.Scheme.Primitives

Executable         huski
  Build-Depends:   base >= 2.0 && < 5, array, containers, haskeline, transformers, mtl, parsec, directory, ghc, ghc-paths
  Extensions:      ExistentialQuantification CPP CPP
  Main-is:         shell.hs
  Hs-Source-Dirs:  hs-src
  Other-Modules:   Language.Scheme.Core
                   Language.Scheme.FFI
                   Language.Scheme.Types
                   Language.Scheme.Variables
                   Language.Scheme.Macro
                   Language.Scheme.Macro.Matches
                   Language.Scheme.Numerical
                   Language.Scheme.Parser
                   Language.Scheme.Primitives
